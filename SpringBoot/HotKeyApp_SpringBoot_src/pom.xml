<!-- Author: Alexander Stahl, Sebastian Voigt -->
<project
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>de.beuth.s66821.hotkeyapp</groupId>
	<artifactId>hotkeyapp</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>jar</packaging>
	<name>hotkeyapp</name>
	<description>Application for executing hotkeys remotely</description>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.5.8.RELEASE</version>
		<relativePath /><!-- lookup parent from repository -->
	</parent>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<java.version>1.8</java.version>
		<aspectj.version>1.8.9</aspectj.version>
		<multexVersion>8.3</multexVersion>
		<messageTextFile>MessageText.properties</messageTextFile>
	</properties>
	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-rest</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
		</dependency>
		<dependency>
			<groupId>de.tfh-berlin.knabe</groupId>
			<artifactId>multex</artifactId>
			<version>${multexVersion}</version>
		</dependency>
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjrt</artifactId>
		</dependency>
		<dependency>
		    <groupId>javax.interceptor</groupId>
		    <artifactId>javax.interceptor-api</artifactId>
		    <version>1.2.1</version>
		</dependency>
	</dependencies>
	<build>
		<plugins>
<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>2.10.4</version>
				<executions>
					<execution>
				                <!-- Here used for extraction of exception message texts in the reference 
					          language from the exception Javadoc comments.
                                                -->
						<goals>
							<goal>javadoc</goal>
						</goals>
						<!-- 
						<phase>process-classes</phase>
						 -->
						<phase>compile</phase>
						<configuration>
							<!-- Specific configuration for the messages report -->
							<doclet>multex.tool.ExceptionMessagesDoclet</doclet>
							<docletArtifact>
								<groupId>de.tfh-berlin.knabe</groupId>
								<artifactId>multex</artifactId>
								<version>${multexVersion}</version>
							</docletArtifact>
							<useStandardDocletOptions>false</useStandardDocletOptions>
							<show>private</show>
							<verbose>false</verbose>
							<debug>false</debug>
							<additionalparam>
								-out ${project.build.directory}/classes/${messageTextFile}
							</additionalparam>
							<!-- For the project-reports page -->
							<name>ExceptionTexts</name>
							<description>Extraction of Exception Message Texts from Source
								Code</description>
						</configuration>
					</execution>
				</executions>
</plugin>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.7.9</version>
				<configuration>
					<output>file</output>
					<append>true</append>
				</configuration>
				<executions>
					<execution>
						<id>jacoco-initialize</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<execution>
						<id>jacoco-site</id>
						<phase>verify</phase>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
					<execution>
						<id>post-unit-test</id>
						<phase>test</phase>
						<goals>
							<goal>report</goal>
						</goals>
						<configuration><!-- Sets the path to the file which contains the collected 
								execution data. -->
							<dataFile>${project.build.directory}/jacoco.exec</dataFile><!-- Sets 
								the output directory for the code coverage report. -->
							<outputDirectory>${project.reporting.outputDirectory}/jacoco-coverage-report</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
		<pluginManagement>
			<plugins><!--This plugin's configuration is used to store Eclipse m2e 
					settings only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.apache.maven.plugins
										</groupId>
										<artifactId>
											maven-javadoc-plugin
										</artifactId>
										<versionRange>
											[2.9.1,)
										</versionRange>
										<goals>
											<goal>javadoc</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.apache.maven.plugins
										</groupId>
										<artifactId>
											maven-dependency-plugin
										</artifactId>
										<versionRange>
											[3.0.2,)
										</versionRange>
										<goals>
											<goal>sources</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
	<reporting>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>2.10.4</version>
				<configuration>
					<show>private</show>
				</configuration>
			</plugin>
		</plugins>
	</reporting>
	<repositories>
		<repository><!-- For current MulTEx: -->
			<id>bht-knabe-repository</id>
			<name>BHT Knabe Maven 2 repository</name>
			<url>http://public.beuth-hochschule.de/~knabe/mvn-repo/</url>
		</repository>
	</repositories>
</project>